platform :ios, '14.0'

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), _FILE_)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first."
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try running flutter pub get again."
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks! :linkage => :static
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(_FILE_))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)

    # âœ… Fix base configuration warning
    if target.respond_to?(:build_configurations) && target.build_configurations
      target.build_configurations.each do |config|
        config.base_configuration_reference = nil
      end
    end

    # âœ… Remove all .xcfilelist references from build phases
    if target.respond_to?(:shell_script_build_phases) && target.shell_script_build_phases
      target.shell_script_build_phases.each do |phase|
        if phase.respond_to?(:input_paths) && phase.input_paths
          phase.input_paths = phase.input_paths.reject { |path| path.end_with?(".xcfilelist") }
        end
        if phase.respond_to?(:output_paths) && phase.output_paths
          phase.output_paths = phase.output_paths.reject { |path| path.end_with?(".xcfilelist") }
        end
      end
    end
  end

  # ðŸš€ remove lingering xcfilelist files project-wide
  installer.pods_project.files.each do |file|
    if file.path.end_with?(".xcfilelist")
      file.remove_from_project
    end
  end
end
